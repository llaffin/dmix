[{"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\index.js":"1","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\App.js":"2","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\reportWebVitals.js":"3","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\siteManagement.jsx":"4","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\index.js":"5","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\services\\auth-service.js":"6","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\trackManagementComp.jsx":"7","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\flyerManagementComp.jsx":"8","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\about.jsx":"9","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\navbar.jsx":"10","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\contact.jsx":"11","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\home.jsx":"12","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\tracks.jsx":"13","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\reset.jsx":"14","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\forgot.jsx":"15","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\activated.jsx":"16","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\signin.jsx":"17","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\signup.jsx":"18","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\adminTrackList.jsx":"19","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\trackListLoading.jsx":"20","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\adminFlyerList.jsx":"21","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\imageListLoading.jsx":"22","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\userFlyerList.jsx":"23","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\userTrackList.jsx":"24"},{"size":517,"mtime":1639783191550,"results":"25","hashOfConfig":"26"},{"size":1255,"mtime":1640281913664,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1639783191551,"results":"28","hashOfConfig":"26"},{"size":4230,"mtime":1639783191546,"results":"29","hashOfConfig":"26"},{"size":607,"mtime":1640281897162,"results":"30","hashOfConfig":"26"},{"size":1235,"mtime":1640121180680,"results":"31","hashOfConfig":"26"},{"size":7941,"mtime":1640281995449,"results":"32","hashOfConfig":"26"},{"size":7360,"mtime":1640281810490,"results":"33","hashOfConfig":"26"},{"size":6358,"mtime":1640115862745,"results":"34","hashOfConfig":"26"},{"size":2871,"mtime":1640281872704,"results":"35","hashOfConfig":"26"},{"size":2486,"mtime":1640281771046,"results":"36","hashOfConfig":"26"},{"size":4150,"mtime":1640288204579,"results":"37","hashOfConfig":"26"},{"size":2612,"mtime":1640111737947,"results":"38","hashOfConfig":"26"},{"size":4892,"mtime":1640111893357,"results":"39","hashOfConfig":"26"},{"size":3806,"mtime":1639783191537,"results":"40","hashOfConfig":"26"},{"size":3918,"mtime":1640111791508,"results":"41","hashOfConfig":"26"},{"size":6633,"mtime":1640110037491,"results":"42","hashOfConfig":"26"},{"size":5457,"mtime":1639783191538,"results":"43","hashOfConfig":"26"},{"size":4280,"mtime":1640281586062,"results":"44","hashOfConfig":"26"},{"size":387,"mtime":1639783191546,"results":"45","hashOfConfig":"26"},{"size":5323,"mtime":1640288889813,"results":"46","hashOfConfig":"26"},{"size":372,"mtime":1639783191544,"results":"47","hashOfConfig":"26"},{"size":2027,"mtime":1640287964274,"results":"48","hashOfConfig":"26"},{"size":3022,"mtime":1640282034430,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18yzr70",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\index.js",[],["108","109"],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\App.js",["110"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport {\r\n  Navigation,\r\n  Home,\r\n  SignUp,\r\n  Activated,\r\n  SignIn,\r\n  Forgot,\r\n  ResetPassword,\r\n  About,\r\n  Contact,\r\n  Merch,\r\n  Tracks,\r\n} from \"./Components\";\r\nimport SiteManagement from \"./Components/siteManagement\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navigation />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={() => <Home />} />\r\n          <Route path=\"/sign-up\" exact component={() => <SignUp />} />\r\n          <Route path=\"/activate\" exact component={() => <Activated />} />\r\n          <Route path=\"/sign-in\" exact component={() => <SignIn />} />\r\n          <Route path=\"/forgot\" exact component={() => <Forgot />} />\r\n          <Route path=\"/reset\" exact component={() => <ResetPassword />} />\r\n          <Route path=\"/about\" exact component={() => <About />} />\r\n          <Route path=\"/tracks\" exact component={() => <Tracks />} />\r\n          <Route path=\"/contact\" exact component={() => <Contact />} />\r\n          <Route path=\"/siteManagement\" exact component={() => <SiteManagement />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\reportWebVitals.js",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\siteManagement.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\index.js",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\services\\auth-service.js",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\trackManagementComp.jsx",["111"],"import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFilePicker } from \"use-file-picker\";\r\nimport list from \"./adminTrackList\";\r\nimport trackListLoading from \"./trackListLoading\";\r\nimport moment from \"moment\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  collapsibleConatainers: {\r\n    backgroundColor: \"gold\",\r\n    width: \"100%\",\r\n  },\r\n  openedCollapsibleConatainers: {\r\n    backgroundColor: \"grey\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction TrackManagementComp() {\r\n  const classes = useStyles();\r\n\r\n  const [title, setTrackName] = React.useState(\"\");\r\n  const [artist, setTrackArtist] = React.useState(\"\");\r\n  const [calendarTrackDate, setCalendarTrackDate] = React.useState(new Date());\r\n  const [releaseDate, setDate] = useState(new Date());\r\n  const [file, setTrackFile] = React.useState();\r\n\r\n  const authService = AuthService.getInstance();\r\n\r\n  const handleTrackNameChange = (event) => {\r\n    setTrackName(event.target.value);\r\n  };\r\n\r\n  const handleTrackArtistChange = (event) => setTrackArtist(event.target.value);\r\n  \r\n  const handlesetTrackFileChange = (event) => {\r\n    console.log(\"LOGGING TOKEN (TO DELETE)\" + authService.getSecureToken());\r\n    setTrackFile(event.target.files[0]);\r\n  };\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  const [openFileSelector, { filesContent }] = useFilePicker({\r\n    multiple: false,\r\n    accept: [\".mp3\", \".wav\"],\r\n  });\r\n\r\n  const ListLoading = trackListLoading(list);\r\n  const [appState, setAppState] = useState({\r\n    loading: false,\r\n    tracks: null,\r\n  });\r\n\r\n  async function apiFunc(toInput) {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"title\", toInput.title);\r\n    formData.append(\"artist\", toInput.artist);\r\n    formData.append(\"releaseDate\", toInput.releaseDate);\r\n    formData.append(\"file\", toInput.file);\r\n\r\n    if (!toInput.title) {\r\n      alert(\"Error! Title cannot be empty. Please try again\");\r\n    } else if (!toInput.artist) {\r\n      alert(\"Error! Artist cannot be empty. Please try again\");\r\n    } else if (!toInput.file) {\r\n      alert(\"Error! No file selected. Please try again\");\r\n    }\r\n\r\n    const response = await fetch(\"/api/track/createTrack\", {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: authService.getSecureToken(),\r\n      }),\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: formData,\r\n    });\r\n    let body = await response;\r\n    setMessage(body.ok ? \"Track added successfully\" : \"Track failed\");\r\n    if (\r\n      !alert(\r\n        body.ok\r\n          ? \"Track added successfully!\"\r\n          : \"Error! Track failed to upload. Please try again\"\r\n      )\r\n    ) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const toInput = { title, artist, releaseDate, file };\r\n\r\n    apiFunc(toInput);\r\n    setTrackName(\"\");\r\n    setTrackArtist(\"\");\r\n    setDate(\"\");\r\n    setTrackFile();\r\n  };\r\n\r\n  const formatTrackDate = (pCalendarTrackDate) => {\r\n    setCalendarTrackDate(pCalendarTrackDate);\r\n    const formattedDate = moment(pCalendarTrackDate).format(\"YYYY-MM-DD\");\r\n    return formattedDate;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = `/api/track/getAllTracks`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((tracks) => {\r\n        setAppState({ loading: false, tracks: tracks });\r\n      });\r\n  }, [setAppState]);\r\n  return (\r\n    <Container component=\"main\" maxWidth={false}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LibraryMusicIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Add Tracks\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={(event) => handleSubmit(event)}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"title\"\r\n                value={title}\r\n                label=\"Track Name\"\r\n                name=\"title\"\r\n                autoComplete=\"title\"\r\n                helperText=\"cannot be blank\"\r\n                onChange={handleTrackNameChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"artist\"\r\n                value={artist}\r\n                label=\"Track Artist\"\r\n                type=\"artist\"\r\n                name=\"artist\"\r\n                autoComplete=\"artist\"\r\n                helperText=\"cannot be blank\"\r\n                onChange={handleTrackArtistChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <div id=\"datePicker\">\r\n                <p class=\"manageSiteDate\">Track date:</p>\r\n                <DatePicker\r\n                  required\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  selected={calendarTrackDate}\r\n                  onChange={(calendarTrackDate) =>\r\n                    setDate(formatTrackDate(calendarTrackDate))\r\n                  }\r\n                  id=\"datePicker\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <div id=\"filePicker\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  onChange={handlesetTrackFileChange}\r\n                  accept=\"audio/mpeg\"\r\n                ></input>\r\n                <div>\r\n                  {filesContent.map((file, index) =>\r\n                    (\r\n                      <div>\r\n                        <p>\r\n                          File Selected: <b>{file.name}</b>\r\n                        </p>\r\n                        <br />\r\n                      </div>\r\n                    )\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            preventDefault\r\n            className={classes.submit}\r\n          >\r\n            Add Track\r\n          </Button>\r\n        </form>\r\n        <Typography style={{ margin: 7 }} variant=\"body1\">\r\n          Status: {message}\r\n        </Typography>\r\n      </div>\r\n      <div className=\"Tracks\">\r\n        <div className=\"track-container\">\r\n          <ListLoading isLoading={appState.loading} tracks={appState.tracks} />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TrackManagementComp;\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\flyerManagementComp.jsx",["112"],"import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InsertPhotoIcon from \"@mui/icons-material/InsertPhoto\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFilePicker } from \"use-file-picker\";\r\nimport list from \"./adminFlyerList\";\r\nimport imageListLoading from \"./imageListLoading\";\r\nimport moment from \"moment\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  collapsibleConatainers: {\r\n    backgroundColor: \"gold\",\r\n    width: \"100%\",\r\n  },\r\n  openedCollapsibleConatainers: {\r\n    backgroundColor: \"grey\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction FlyerManagementComp() {\r\n  const classes = useStyles();\r\n\r\n  const [eventName, setEventName] = React.useState(\"\");\r\n  const [calendarEventDate, setCalendarEventDate] = React.useState(new Date());\r\n  const [eventDate, setEventDate] = React.useState(new Date());\r\n  const [file, setFlyerFile] = React.useState();\r\n\r\n  const authService = AuthService.getInstance();\r\n\r\n  const handleEventNameChange = (event) => {\r\n    setEventName(event.target.value);\r\n  };\r\n\r\n  const handlesetFlyerFileChange = (event) => {\r\n    setFlyerFile(event.target.files[0]);\r\n  };\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  const [openFileSelector, { filesContent }] = useFilePicker({\r\n    multiple: false,\r\n    accept: [\".jpg\", \".png\", \".gif\"],\r\n  });\r\n\r\n  const ImageListLoading = imageListLoading(list);\r\n  const [appState, setAppState] = useState({\r\n    loading: false,\r\n    flyers: null,\r\n  });\r\n\r\n  async function apiFunc(toInput) {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"eventName\", toInput.eventName);\r\n    formData.append(\"eventDate\", toInput.eventDate);\r\n    formData.append(\"file\", toInput.file);\r\n\r\n    if (!toInput.eventName) {\r\n      alert(\"Error! Event name cannot be empty. Please try again\");\r\n    } else if (!toInput.file) {\r\n      alert(\"Error! No file selected. Please try again\");\r\n    }\r\n\r\n    // https://dmixbreed.com/api/flyer/getAllFlyers\r\n    // /api/flyer/createFlyer\r\n    const response = await fetch(\"/api/flyer/createFlyer\", {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        Authorization: authService.getSecureToken(),\r\n      }),\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: formData,\r\n    });\r\n    let body = await response;\r\n    setMessage(body.ok ? \"Flyer added successfully\" : \"Flyer failed\");\r\n    if (\r\n      !alert(\r\n        body.ok\r\n          ? \"Flyer added successfully!\"\r\n          : \"Error! Flyer failed to upload. Please try again\"\r\n      )\r\n    ) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const toInput = { eventName, eventDate, file };\r\n\r\n    apiFunc(toInput);\r\n    setEventName(\"\");\r\n    setEventDate(\"\");\r\n    setFlyerFile();\r\n  };\r\n\r\n  const formatEventDate = (pCalendarEventDate) => {\r\n    setCalendarEventDate(pCalendarEventDate);\r\n    const formattedDate = moment(pCalendarEventDate).format(\"YYYY-MM-DD\");\r\n    return formattedDate;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = `/api/flyer/getAllFlyers`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((flyers) => {\r\n        setAppState({ loading: false, flyers: flyers });\r\n      });\r\n  }, [setAppState]);\r\n  return (\r\n    <Container component=\"main\" maxWidth={false}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <InsertPhotoIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Add Events/Flyers\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"title\"\r\n                value={eventName}\r\n                label=\"Event Name\"\r\n                name=\"eventName\"\r\n                autoComplete=\"eventName\"\r\n                helperText=\"cannot be blank\"\r\n                onChange={handleEventNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div id=\"datePicker\">\r\n                <p class=\"manageSiteDate\">Event date:</p>\r\n                <DatePicker\r\n                  required\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  selected={calendarEventDate}\r\n                  onChange={(calendarEventDate) =>\r\n                    setEventDate(formatEventDate(calendarEventDate))\r\n                  }\r\n                  id=\"datePicker\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <div id=\"filePicker\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  onChange={handlesetFlyerFileChange}\r\n                  accept=\"image/png, image/jpeg\"\r\n                ></input>\r\n                <div>\r\n                  {filesContent.map((file, index) =>\r\n                    (\r\n                      <div>\r\n                        <p>\r\n                          File Selected: <b>{file.name}</b>\r\n                        </p>\r\n                        {/* <p>{file}</p> */}\r\n                        {/* <div key={index}>{file.content}</div> */}\r\n                        <br />\r\n                      </div>\r\n                    )\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            preventDefault\r\n            className={classes.submit}\r\n            // onClick={handleSubmit}\r\n          >\r\n            Add Flyer\r\n          </Button>\r\n        </form>\r\n        <Typography style={{ margin: 7 }} variant=\"body1\">\r\n          Status: {message}\r\n        </Typography>\r\n      </div>\r\n      <div className=\"Flyers\">\r\n        <div className=\"flyer-container\">\r\n          <ImageListLoading\r\n            isLoading={appState.loading}\r\n            flyers={appState.flyers}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FlyerManagementComp;\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\about.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\navbar.jsx",["113"],"import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport logo from \"../Assests/Images/Logo.png\";\r\nimport AuthService from \"../services/auth-service\";\r\n\r\nfunction Navigation(props) {\r\n  const [nav, setNav] = useState(false);\r\n  const authService = AuthService.getInstance();\r\n\r\n  const changeBackround = () => {\r\n    if (window.scrollY >= 50) {\r\n      setNav(true);\r\n    } else {\r\n      setNav(false);\r\n    }\r\n  };\r\n\r\n  async function apiFunc() {\r\n    const response = await fetch(\"/api/auth/logout\", {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: new Headers({\r\n        Authorization: authService.getSecureToken,\r\n      }),\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        window.location.href = \"/\";\r\n      });\r\n  }\r\n\r\n  const logoutClicked = () => {\r\n    apiFunc();\r\n    authService.logoutAndRemoveSecureToken();\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", changeBackround);\r\n\r\n  return (\r\n    <nav className={nav ? \"nav active\" : \"nav\"}>\r\n      <a href=\"/\">\r\n        <p>\r\n          <img src={logo} alt=\"InDMix\" class=\"navLogo\" />\r\n        </p>\r\n      </a>\r\n      <input type=\"checkbox\" className=\"menu-btn\" id=\"menu-btn\" />\r\n      <label className=\"menu-icon\" for=\"menu-btn\">\r\n        <span className=\"nav-icon\"></span>\r\n      </label>\r\n      <ul className=\"menu\">\r\n        <li>\r\n          <a href=\"/\" className=\"active\">\r\n            Home\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/about\">About</a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"https://dmixbreed.creator-spring.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Merch\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/tracks\">Tracks</a>\r\n        </li>\r\n        {/* <li>\r\n          <a href=\"/contact\">Contact</a>\r\n        </li> */}\r\n        <li>\r\n          <div>&nbsp; &nbsp; &nbsp;</div>\r\n        </li>\r\n        {/* {!authService.hasSecureToken() ? (\r\n          <li>\r\n            <a href=\"/sign-up\">Sign Up</a>\r\n          </li>\r\n        ) : null}\r\n        {!authService.hasSecureToken() ? (\r\n          <li>\r\n            <a href=\"/sign-in\">Sign In</a>\r\n          </li>\r\n        ) : null} */}\r\n        <li>\r\n          <div>&nbsp; &nbsp; &nbsp;</div>\r\n        </li>\r\n        {authService.hasSecureToken() ? (\r\n          <li>\r\n            <a href=\"/siteManagement\">Site Management</a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {authService.hasSecureToken() ? (\r\n          <li>\r\n            <a href=\"/\" onClick={logoutClicked}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\contact.jsx",["114","115","116"],"import Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { FaFacebook, FaSoundcloud, FaTwitch } from \"react-icons/fa\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\nimport { SiTiktok } from \"react-icons/si\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function About() {\r\n  const classes = useStyles();\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n\r\n  function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {\"newByteX © \"} {new Date().getFullYear()}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"s\">\r\n      <div id=\"main\">\r\n        <div className=\"name\">\r\n          <h1>\r\n            <span>Contact</span> Me\r\n          </h1>\r\n          <br></br>\r\n          <a href=\"http://www.tiktok.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n            <SiTiktok class=\"socialMedia\"></SiTiktok>\r\n          </a>\r\n          <a href=\"http://www.facebook.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n            <FaFacebook class=\"socialMedia\"></FaFacebook>\r\n          </a>\r\n          <a href=\"http://www.twitch.tv/\" target=\"_blank\" rel=\"noreferrer\">\r\n            <FaTwitch class=\"socialMedia\"></FaTwitch>\r\n          </a>\r\n          <a href=\"http://www.soundcloud.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n            <FaSoundcloud class=\"socialMedia\"></FaSoundcloud>\r\n          </a>\r\n          <a href=\"mailto: test@gmail.com\" target=\"_blank\" rel=\"noreferrer\">\r\n            <HiOutlineMail class=\"socialMedia\"></HiOutlineMail>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <CssBaseline />\r\n      <Box mt={8} class=\"copyrightFooter\">\r\n        <Copyright />\r\n        <br></br>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\home.jsx",["117"],"import Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Zoom } from \"react-slideshow-image\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport image1 from \"../Assests/Images/image1.bmp\";\r\nimport image2 from \"../Assests/Images/image2.bmp\";\r\nimport list from \"./userFlyerList\";\r\nimport imageListLoading from \"./imageListLoading\";\r\n\r\nconst images = [image1, image2];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst zoomOutProperties = {\r\n  duration: 3000,\r\n  transitionDuration: 350,\r\n  infinite: true,\r\n  indicators: true,\r\n  scale: 0.4,\r\n  arrows: false,\r\n};\r\n\r\nconst Slideshow = () => {\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <Zoom {...zoomOutProperties}>\r\n        {images.map((each, index) => (\r\n            <img\r\n              key={index}\r\n              style={\r\n                {\r\n                  width: \"100%\",\r\n                  display: \"block\",\r\n                  margin: \"0 auto\"\r\n                }\r\n              }\r\n              src={each}\r\n              alt=\"\"\r\n            />\r\n        ))}\r\n      </Zoom>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const ImageListLoading = imageListLoading(list);\r\n  const [appState, setAppState] = useState({\r\n    loading: false,\r\n    tracks: null,\r\n  });\r\n\r\n  function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {\"newByteX © \"} {new Date().getFullYear()}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  // https://dmixbreed.com/api/flyer/getAllFlyers\r\n  // /api/flyer/getAllFlyers\r\n\r\n  useEffect(() => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = `/api/flyer/getAllFlyers`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((flyers) => {\r\n        setAppState({ loading: false, flyers: flyers });\r\n      });\r\n  }, [setAppState]);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"s\">\r\n      <div id=\"main\">\r\n        <div className=\"name\"></div>\r\n        <div id=\"parent\">\r\n          <div class=\"slideChildHome\">\r\n            <Slideshow />\r\n          </div>\r\n          <div class=\"slideChild\">\r\n            <div className=\"Flyers\">\r\n              <div className=\"flyer-container\">\r\n                <ImageListLoading\r\n                  isLoading={appState.loading}\r\n                  flyers={appState.flyers}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"twitch child\">\r\n            <div class=\"twitch-video\">\r\n              <iframe\r\n                title=\"dmixbreedStream\"\r\n                src=\"https://player.twitch.tv/?channel=dmixbreedthedj&parent=dmixbreed.com&autoplay=false\"\r\n                frameborder=\"0\"\r\n                scrolling=\"no\"\r\n                allowfullscreen=\"true\"\r\n                height=\"100%\"\r\n                width=\"100%\">\r\n              </iframe>\r\n            </div>\r\n            <div class=\"twitch-chat\">\r\n              <iframe\r\n                title=\"dmixbreedChat\"\r\n                frameborder=\"0\"\r\n                scrolling=\"no\"\r\n                src=\"https://www.twitch.tv/embed/dmixbreedthedj/chat?parent=dmixbreed.com\"\r\n                height=\"100%\"\r\n                width=\"100%\">\r\n              </iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n          <br></br>\r\n        </Box>\r\n      </div>\r\n      <CssBaseline />\r\n    </Container>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\tracks.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\reset.jsx",["118"],"import Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function ResetPassword() {\r\n  const classes = useStyles();\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n  const [passwordResetCode, setToken] = React.useState(\"\");\r\n\r\n  const handlePasswordChange = (event) => setPassword(event.target.value);\r\n  const handleConfirmPasswordChange = (event) =>\r\n    setConfirmPassword(event.target.value);\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  var pathArray = window.location.search.split(\"=\");\r\n  var tokenURL = pathArray[1];\r\n  console.log(\"Token from URL:\", tokenURL);\r\n\r\n  async function apiFunc(toInput) {\r\n    const response = await fetch(\"/api/auth/reset\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(toInput),\r\n    });\r\n\r\n    let body = await response;\r\n    console.log(body);\r\n    setMessage(body.ok ? \"Password Reset successful\" : \"Password Reset failed\");\r\n  }\r\n\r\n  const handleSubmit = (variables) => {\r\n    if (password === confirmPassword) {\r\n      alert(\"Passwords match!\");\r\n      const toInput = { password: password, passwordResetCode: tokenURL };\r\n      apiFunc(toInput);\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setToken(tokenURL);\r\n      console.log(tokenURL);\r\n    } else {\r\n      alert(\"Not matching!\");\r\n    }\r\n  };\r\n\r\n  if (firstLoad) {\r\n    // sampleFunc();\r\n    setLoad(false);\r\n  }\r\n\r\n  function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {\"newByteX © \"} {new Date().getFullYear()}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <Avatar className={classes.avatar}>\r\n          <GroupIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Password\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"password\"\r\n                value={password}\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                autoComplete=\"password\"\r\n                onChange={handlePasswordChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                autoComplete=\"confirmPassword\"\r\n                onChange={handleConfirmPasswordChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            // type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            preventefault\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n        <Typography style={{ margin: 7 }} variant=\"body1\">\r\n          Status: {message}\r\n        </Typography>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\forgot.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\activated.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\signin.jsx",["119","120","121"],"import Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircleSharpIcon from \"@mui/icons-material/AccountCircleSharp\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth-service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(18),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  validationMsg: {\r\n    color: \"red\",\r\n    fontWeight: \"bolder\",\r\n    textAlign: \"center\",\r\n  },\r\n  isRequired: {\r\n    // border: \"3px solid red\",\r\n    boxShadow: \"3px inset\",\r\n  },\r\n  input: {\r\n    font: \"inherit\",\r\n    color: \"currentColor\",\r\n    width: \"100%\",\r\n    border: 0,\r\n    height: \"1.1876em\",\r\n    margin: 0,\r\n    display: \"block\",\r\n    padding: \"6px 0 7px\",\r\n    minWidth: 0,\r\n    background: \"none\",\r\n    boxSizing: \"content-box\",\r\n    animationName: \"mui-auto-fill-cancel\",\r\n    letterSpacing: \"inherit\",\r\n    animationDuration: \"10ms\",\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const handleEmailChange = (event) => setEmail(event.target.value);\r\n  const handlePasswordChange = (event) => setPassword(event.target.value);\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [errors, setErrors] = React.useState({});\r\n\r\n  const authService = AuthService.getInstance();\r\n\r\n  async function apiFunc(toInput) {\r\n    const response = await fetch(\"/api/auth/login\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(toInput),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (!response.email || response.email == null) {\r\n          alert(\r\n            \"Error! Failed to sign in. Please check your email and/or password and try again.\"\r\n          );\r\n        } else {\r\n          authService.loginAndStoreSecureToken(response.token);\r\n          alert(\"Successfully sign in!\");\r\n          window.location.href = \"/\";\r\n        }\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n    }\r\n    const toInput = { email, password };\r\n    apiFunc(toInput);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = {};\r\n    temp.email = email ? \"\" : \"This field is required\";\r\n    temp.emailValid = /.+@.+..+/.test(email) ? \"\" : \"Email is not valid\";\r\n    temp.password = password ? \"\" : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  if (firstLoad) {\r\n    // sampleFunc();\r\n    setLoad(false);\r\n  }\r\n\r\n  function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {\"newByteX © \"} {new Date().getFullYear()}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      {!authService.hasSecureToken() ? (\r\n        <Container>\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <Avatar className={classes.avatar}>\r\n              <AccountCircleSharpIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign In\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <p className={classes.validationMsg}>{message}</p>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    value={email}\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    onChange={handleEmailChange}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    value={password}\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"password\"\r\n                    onChange={handlePasswordChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"info\"\r\n                preventdefault\r\n                className={classes.submit}\r\n                // onClick={handleSubmit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <NavLink to=\"/forgot\">Forgot Password?</NavLink>\r\n                </Grid>\r\n                {/* <Grid item>\r\n                  <NavLink to=\"/sign-up\">\r\n                    Don't have an account? Sign Up\r\n                  </NavLink>\r\n                </Grid> */}\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={8} class=\"copyrightFooter\">\r\n            <Copyright />\r\n            <br></br>\r\n          </Box>\r\n        </Container>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\Authentication\\signup.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\adminTrackList.jsx",["122"],"import Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport AuthService from \"../services/auth-service\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TrackImage from \"../Assests/Images/TrackImage.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  eventsContainer: {\r\n    // scrollBehavior: \"smooth\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"20em\",\r\n    marginBottom: \"3rem\",\r\n  },\r\n  flyerBox: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n    height: \"13em\",\r\n    margin: \"0 0 2rem 0\",\r\n    alignContent: \"flex-start\",\r\n    borderBottom: \"1px darkgrey solid\",\r\n  },\r\n  flyerDetails: {\r\n    width: \"100%\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  flyerTitle: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"2em\",\r\n  },\r\n  flyerSubtitles: {\r\n    fontStyle: \"italic\",\r\n    fontSize: \"1.2em\",\r\n  },\r\n  imageBox: {\r\n    alignSelf: \"flex-start\",\r\n    width: \"10%\",\r\n  },\r\n  eventDetailsBox: {\r\n    width: \"70%\",\r\n    paddingLeft: \"1rem\",\r\n  },\r\n  deleteBtn: {\r\n    width: \"20%\",\r\n    fontSize: \"1.5rem\",\r\n  },\r\n  flyerImage: {\r\n    alignSelf: \"flex-end\",\r\n    width: \"100%\",\r\n  },\r\n  eventOverdue: {\r\n    color: \"red\",\r\n  },\r\n  eventHasTime: {\r\n    color: \"green\",\r\n  },\r\n  flyerManageTitle: {\r\n    fontSize: \"3rem\",\r\n  },\r\n  trackTitle: {\r\n    fontSize: \"1em\",\r\n  },\r\n}));\r\n\r\nconst AdminTrackList = (props) => {\r\n  const classes = useStyles();\r\n  const { tracks } = props;\r\n\r\n  const authService = AuthService.getInstance();\r\n\r\n  async function apiFunc(toInput) {\r\n    const response = await fetch(\"/api/track/deleteTrack\", {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: authService.getSecureToken(),\r\n      }),\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: JSON.stringify(toInput),\r\n    });\r\n    let body = await response;\r\n    window.location.reload();\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    const toInput = { id };\r\n    apiFunc(toInput);\r\n  };\r\n\r\n  const setTrackSource = (id) => {\r\n    // return `http://142.93.146.6:8080/api/track/streamTrack/${id}`;\r\n    return `https://dmixbreed.com/api/track/streamTrack/${id}`;\r\n  };\r\n\r\n  if (!tracks || tracks.length === 0)\r\n    return (\r\n      <p>\r\n        <b>No tracks uploaded</b>\r\n      </p>\r\n    );\r\n  return (\r\n    <Grid className={classes.eventsContainer}>\r\n      <h2 className={classes.flyerManageTitle}>Manage tracks</h2>\r\n      {tracks.map((track) => {\r\n        return (\r\n          <Container\r\n            component=\"div\"\r\n            maxWidth={false}\r\n            className={classes.flyerBox}\r\n            key={track.id}\r\n          >\r\n            <div className={classes.imageBox}>\r\n              <img src={TrackImage} className={classes.flyerImage} alt=\"upcoming event\" />\r\n            </div>\r\n            <div key={track.id} className={classes.eventDetailsBox}>\r\n              <p className={`${classes.flyerDetails} ${classes.flyerTitle}`}>\r\n                <span className={classes.trackTitle}>{track.title}</span> -{\" \"}\r\n                {track.artist}\r\n                <br></br>\r\n                <audio type=\"audio/mpeg\" controls volume=\"true\">\r\n                  <source\r\n                    src={setTrackSource(track.id)}\r\n                    type=\"audio/mpeg\"\r\n                  ></source>\r\n                  Your browser does not support the audio element.\r\n                </audio>\r\n              </p>\r\n            </div>\r\n            <Button\r\n              className={classes.deleteBtn}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              preventDefault\r\n              onClick={() => {\r\n                const confirmBox = window.confirm(\r\n                  \"Deleting track, please confirm.\"\r\n                );\r\n                if (confirmBox === true) {\r\n                  handleDelete(track.id);\r\n                }\r\n              }}\r\n            >\r\n              Delete track\r\n            </Button>\r\n          </Container>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AdminTrackList;\r\n","C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\trackListLoading.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\adminFlyerList.jsx",["123"],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\imageListLoading.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\userFlyerList.jsx",[],"C:\\Users\\Jawad\\Desktop\\Newbyte-ReactJS\\src\\Components\\userTrackList.jsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":13,"column":3,"nodeType":"130","messageId":"131","endLine":13,"endColumn":8},{"ruleId":"128","severity":1,"message":"132","line":76,"column":10,"nodeType":"130","messageId":"131","endLine":76,"endColumn":26},{"ruleId":"128","severity":1,"message":"132","line":72,"column":10,"nodeType":"130","messageId":"131","endLine":72,"endColumn":26},{"ruleId":"128","severity":1,"message":"133","line":19,"column":11,"nodeType":"130","messageId":"131","endLine":19,"endColumn":19},{"ruleId":"128","severity":1,"message":"134","line":37,"column":9,"nodeType":"130","messageId":"131","endLine":37,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":38,"column":10,"nodeType":"130","messageId":"131","endLine":38,"endColumn":19},{"ruleId":"128","severity":1,"message":"136","line":38,"column":21,"nodeType":"130","messageId":"131","endLine":38,"endColumn":28},{"ruleId":"128","severity":1,"message":"134","line":73,"column":9,"nodeType":"130","messageId":"131","endLine":73,"endColumn":16},{"ruleId":"128","severity":1,"message":"137","line":44,"column":10,"nodeType":"130","messageId":"131","endLine":44,"endColumn":27},{"ruleId":"128","severity":1,"message":"138","line":76,"column":19,"nodeType":"130","messageId":"131","endLine":76,"endColumn":29},{"ruleId":"128","severity":1,"message":"139","line":77,"column":10,"nodeType":"130","messageId":"131","endLine":77,"endColumn":16},{"ruleId":"128","severity":1,"message":"133","line":82,"column":11,"nodeType":"130","messageId":"131","endLine":82,"endColumn":19},{"ruleId":"128","severity":1,"message":"140","line":88,"column":9,"nodeType":"130","messageId":"131","endLine":88,"endColumn":13},{"ruleId":"128","severity":1,"message":"140","line":86,"column":9,"nodeType":"130","messageId":"131","endLine":86,"endColumn":13},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Merch' is defined but never used.","Identifier","unusedVar","'openFileSelector' is assigned a value but never used.","'response' is assigned a value but never used.","'classes' is assigned a value but never used.","'firstLoad' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'passwordResetCode' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'errors' is assigned a value but never used.","'body' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]