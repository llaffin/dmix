{"ast":null,"code":"import Cookies from\"universal-cookie\";export default class AuthService{constructor(){this.userCookies=new Cookies();}/**\r\n   * @returns {AuthService}\r\n   */static getInstance(){if(AuthService.myInstance==null){return AuthService.myInstance=new AuthService();}return this.myInstance;}loginAndStoreSecureToken(token){this.userCookies.set(\"secureToken\",{key:token},{path:\"/\",expires:new Date(Date.now()+604800),// httpOnly: true,\nsameSite:true});}logoutAndRemoveSecureToken(){this.userCookies.remove(\"secureToken\",{path:\"/\",expires:new Date(Date.now()+604800),// httpOnly: true,\nsameSite:true});}logoutAPICall(){}hasSecureToken(){if(this.userCookies.get(\"secureToken\")){return true;}else{return false;}}getSecureToken(){let secureToken=JSON.stringify(this.userCookies.get(\"secureToken\"));let secureTokenSpliced=secureToken.substring(8,171);console.log(secureTokenSpliced);return secureTokenSpliced;}}AuthService.myInstance=null;","map":{"version":3,"sources":["C:/Users/Jawad/Desktop/Newbyte-ReactJS/src/services/auth-service.js"],"names":["Cookies","AuthService","userCookies","getInstance","myInstance","loginAndStoreSecureToken","token","set","key","path","expires","Date","now","sameSite","logoutAndRemoveSecureToken","remove","logoutAPICall","hasSecureToken","get","getSecureToken","secureToken","JSON","stringify","secureTokenSpliced","substring","console","log"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,kBAApB,CAEA,cAAe,MAAMC,CAAAA,WAAY,oBAE/BC,WAF+B,CAEjB,GAAIF,CAAAA,OAAJ,EAFiB,EAI/B;AACF;AACA,KACoB,MAAXG,CAAAA,WAAW,EAAG,CACnB,GAAIF,WAAW,CAACG,UAAZ,EAA0B,IAA9B,CAAoC,CAClC,MAAQH,CAAAA,WAAW,CAACG,UAAZ,CAAyB,GAAIH,CAAAA,WAAJ,EAAjC,CACD,CACD,MAAO,MAAKG,UAAZ,CACD,CAEDC,wBAAwB,CAACC,KAAD,CAAQ,CAC9B,KAAKJ,WAAL,CAAiBK,GAAjB,CACE,aADF,CAEE,CAAEC,GAAG,CAAEF,KAAP,CAFF,CAGE,CACEG,IAAI,CAAE,GADR,CAEEC,OAAO,CAAE,GAAIC,CAAAA,IAAJ,CAASA,IAAI,CAACC,GAAL,GAAa,MAAtB,CAFX,CAGE;AACAC,QAAQ,CAAE,IAJZ,CAHF,EAUD,CAEDC,0BAA0B,EAAG,CAC3B,KAAKZ,WAAL,CAAiBa,MAAjB,CAAwB,aAAxB,CAAuC,CACrCN,IAAI,CAAE,GAD+B,CAErCC,OAAO,CAAE,GAAIC,CAAAA,IAAJ,CAASA,IAAI,CAACC,GAAL,GAAa,MAAtB,CAF4B,CAGrC;AACAC,QAAQ,CAAE,IAJ2B,CAAvC,EAMD,CAEDG,aAAa,EAAG,CAAE,CAElBC,cAAc,EAAG,CACf,GAAI,KAAKf,WAAL,CAAiBgB,GAAjB,CAAqB,aAArB,CAAJ,CAAyC,CACvC,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAO,MAAP,CACD,CACF,CAEDC,cAAc,EAAG,CACf,GAAIC,CAAAA,WAAW,CAAGC,IAAI,CAACC,SAAL,CAAe,KAAKpB,WAAL,CAAiBgB,GAAjB,CAAqB,aAArB,CAAf,CAAlB,CACA,GAAIK,CAAAA,kBAAkB,CAAGH,WAAW,CAACI,SAAZ,CAAsB,CAAtB,CAAyB,GAAzB,CAAzB,CACAC,OAAO,CAACC,GAAR,CAAYH,kBAAZ,EACA,MAAOA,CAAAA,kBAAP,CACD,CAnD8B,CAAZtB,W,CACZG,U,CAAa,I","sourcesContent":["import Cookies from \"universal-cookie\";\r\n\r\nexport default class AuthService {\r\n  static myInstance = null;\r\n  userCookies = new Cookies();\r\n\r\n  /**\r\n   * @returns {AuthService}\r\n   */\r\n  static getInstance() {\r\n    if (AuthService.myInstance == null) {\r\n      return (AuthService.myInstance = new AuthService());\r\n    }\r\n    return this.myInstance;\r\n  }\r\n\r\n  loginAndStoreSecureToken(token) {\r\n    this.userCookies.set(\r\n      \"secureToken\",\r\n      { key: token },\r\n      {\r\n        path: \"/\",\r\n        expires: new Date(Date.now() + 604800),\r\n        // httpOnly: true,\r\n        sameSite: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  logoutAndRemoveSecureToken() {\r\n    this.userCookies.remove(\"secureToken\", {\r\n      path: \"/\",\r\n      expires: new Date(Date.now() + 604800),\r\n      // httpOnly: true,\r\n      sameSite: true,\r\n    });\r\n  }\r\n\r\n  logoutAPICall() {}\r\n\r\n  hasSecureToken() {\r\n    if (this.userCookies.get(\"secureToken\")) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getSecureToken() {\r\n    let secureToken = JSON.stringify(this.userCookies.get(\"secureToken\"));\r\n    let secureTokenSpliced = secureToken.substring(8, 171);\r\n    console.log(secureTokenSpliced);\r\n    return secureTokenSpliced;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}